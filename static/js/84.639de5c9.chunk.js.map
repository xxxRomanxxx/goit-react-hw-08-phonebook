{"version":3,"file":"static/js/84.639de5c9.chunk.js","mappings":"8NACA,EAAuB,0BAAvB,EAA+D,iCAA/D,EAA8G,iCAA9G,EAA8J,kC,oBCK/I,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvBC,GAAWC,EAAAA,EAAAA,MAEjB,GAA0CC,EAAAA,EAAAA,IAAQ,CAChDC,cAAe,CACbC,KAAM,GACNC,OAAQ,MAHJC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAAcC,EAAhC,EAAgCA,MAwB1B,OACA,kBAAMC,SAAUF,GAlBL,SAAC,GAAsB,IAApBH,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OAEtBR,EAASa,MACP,SAAAC,GAAO,OAAIA,EAAQP,KAAKQ,gBAAkBR,EAAKQ,aAAxC,IAGTC,MAAM,GAAD,OAAIT,EAAJ,6BAGHP,EAASa,MAAK,SAAAC,GAAO,OAAIA,EAAQN,SAAWA,CAAvB,IACvBQ,MAAM,GAAD,OAAIR,EAAJ,8BAGPL,GAASc,EAAAA,EAAAA,IAAW,CAAEV,KAAAA,EAAMC,OAAAA,KAC5BG,IACD,IAG6CO,UAAWC,EAAnD,WACI,mBAAOD,UAAWC,EAAlB,UAAmC,QAEjC,0BACAD,UAAWC,EACXC,KAAK,OACLb,KAAK,OACLc,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,GACJd,EAAS,cAGf,mBAAOS,UAAWC,EAAlB,UAAmC,UAEnC,0BACED,UAAWC,EACXC,KAAK,MACLb,KAAK,SACLc,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,GACJd,EAAS,gBAGf,mBAAQW,KAAK,SAASF,UAAWC,EAAjC,SAAmD,kBAG1D,CC9DL,MAA4B,6BCA5B,EAAyB,uBAAzB,EAAgE,8B,UCgBhE,EAbe,WACd,IAAMhB,GAAWC,EAAAA,EAAAA,MAIjB,OACC,mBAAOc,UAAWC,EAAlB,UAA8B,yBAE7B,kBAAOC,KAAK,OAAOb,KAAK,SAAQW,UAAWC,EAAmBK,SALzC,SAAAC,GAAG,OAAItB,GAASuB,EAAAA,EAAAA,GAAUD,EAAIE,cAAcC,OAAzC,MAQ1B,E,UCdD,GAAgB,cAAgB,mCAAmC,cAAgB,mCAAmC,gBAAkB,sCC4BxI,EAvBoB,WAClB,IAAMzB,GAAWC,EAAAA,EAAAA,MACXyB,GAAkB5B,EAAAA,EAAAA,IAAY6B,EAAAA,IAEpC,OACE,eAAIZ,UAAWC,EAAAA,cAAf,SACGU,EAAgBE,KAAI,SAAAjB,GAAO,OAC1B,gBAAII,UAAWC,EAAAA,cAAf,WACE,kBAAMD,UAAWC,EAAAA,cAAjB,UAAqCL,EAAQP,KAAK,QAClD,iBAAMW,UAAWC,EAAAA,cAAjB,SAAqCL,EAAQN,UAC7C,mBACEU,UAAWC,EAAAA,gBACXC,KAAK,SACLY,QAAS,kBAAM7B,GAAS8B,EAAAA,EAAAA,IAAcnB,EAAQoB,IAArC,EAHX,SAIC,aAPoCpB,EAAQoB,GADrB,KAejC,E,UCKD,EAtBkB,WAChB,IAAM/B,GAAWC,EAAAA,EAAAA,MACX+B,GAAYlC,EAAAA,EAAAA,IAAYmC,EAAAA,IACxBC,GAAQpC,EAAAA,EAAAA,IAAYqC,EAAAA,IAM1B,OAJAC,EAAAA,EAAAA,YAAU,WACRpC,GAASqC,EAAAA,EAAAA,MACV,GAAE,CAACrC,KAGF,iBAAKe,UAAWC,EAAhB,WACE,wBAAI,eACJ,SAACpB,EAAD,KACA,wBAAI,cACJ,SAAC,EAAD,IACCsC,IAAS,uBAAIA,KACd,SAAC,EAAD,IACCF,IAAa,SAACM,EAAA,EAAD,MAGnB,ECxBD,EAJiB,WACf,OAAO,SAAC,EAAD,GACR,C","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Phonebook/Phonebook.module.css?3a02","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","components/Phonebook/Phonebook.jsx","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"form__label\":\"ContactForm_form__label__8W82B\",\"form__input\":\"ContactForm_form__input__VGD4-\",\"form__button\":\"ContactForm_form__button__MT1Jk\"};","import { useDispatch, useSelector } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nimport { addContact } from \"../../redux/operations\";\nimport css from \"./ContactForm.module.css\";\nimport { getContacts } from \"../../redux/selector\";\n\nexport default function ContactForm() {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const { register, handleSubmit, reset } = useForm({\n    defaultValues: {\n      name: '',\n      number: '',\n    },\n  });\n\n  const onSubmit = ({ name, number }) => {\n    if (\n      contacts.some(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n    if (contacts.some(contact => contact.number === number)) {\n      alert(`${number} is already in contacts.`);\n      return;\n    }\n    dispatch(addContact({ name, number }));\n    reset();\n  };\n\n        return (\n        <form onSubmit={handleSubmit(onSubmit)} className={css.form}>\n            <label className={css.form__label}>\n              Name\n              <input\n              className={css.form__input}\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n              {...register('name')}\n              /> \n            </label>\n            <label className={css.form__label}>\n            Number\n            <input\n              className={css.form__input} \n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n              {...register('number')}\n              />\n            </label>\n            <button type=\"submit\" className={css.form__button}>Add contact</button>\n          </form>\n          );\n    }","// extracted by mini-css-extract-plugin\nexport default {\"phonebook\":\"Phonebook_phonebook__A8MMG\"};","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\",\"filter__input\":\"Filter_filter__input__toa89\"};","import css from './Filter.module.css'\nimport { useDispatch } from \"react-redux\";\nimport { setFilter } from \"../../redux/filterSlice\";\n\nconst Filter = () => {\n\tconst dispatch = useDispatch();\n  \n\tconst onFilterChange = evt => dispatch(setFilter(evt.currentTarget.value));  \n\n\treturn (\n\t\t<label className={css.filter}>\n\t\t\tFind contacts by name\n\t\t\t<input type=\"text\" name=\"filter\"className={css.filter__input} onChange={onFilterChange}/>\n\t\t</label>\n\t)\n};\n\nexport default Filter;","// extracted by mini-css-extract-plugin\nexport default {\"contact__list\":\"ContactList_contact__list__2jNwc\",\"contact__item\":\"ContactList_contact__item__PFoNH\",\"contact__button\":\"ContactList_contact__button__uACfU\"};","import React from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport css from './ContactList.module.css'\nimport { deleteContact } from '../../redux/operations';\nimport { getVisibleContacts } from '../../redux/selector';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const visibleContacts = useSelector(getVisibleContacts);\n\n  return (\n    <ul className={css.contact__list}>\n      {visibleContacts.map(contact => (\n        <li className={css.contact__item} key={contact.id}>\n          <span className={css.contact__text}>{contact.name}:</span> \n          <span className={css.contact__text}>{contact.number}</span>\n          <button\n            className={css.contact__button}\n            type=\"button\"\n            onClick={() => dispatch(deleteContact(contact.id))}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport css from './Phonebook.module.css';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\nimport Loader from 'components/Loader/Loader';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getError, getIsLoading } from 'redux/selector';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/operations';\n\nconst Phonebook = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={css.phonebook}>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      {error && <p>{error}</p>}\n      <ContactList />\n      {isLoading && <Loader />}\n    </div>\n  );\n};\n\nexport default Phonebook;","import Phonebook from 'components/Phonebook/Phonebook';\n\nconst Contacts = () => {\n  return <Phonebook />;\n};\n\nexport default Contacts;"],"names":["ContactForm","contacts","useSelector","getContacts","dispatch","useDispatch","useForm","defaultValues","name","number","register","handleSubmit","reset","onSubmit","some","contact","toLowerCase","alert","addContact","className","css","type","pattern","title","required","onChange","evt","setFilter","currentTarget","value","visibleContacts","getVisibleContacts","map","onClick","deleteContact","id","isLoading","getIsLoading","error","getError","useEffect","fetchContacts","Loader"],"sourceRoot":""}